r0 = socket$can_j1939(AUTO, AUTO, AUTO)
ioctl$ifreq_SIOCGIFINDEX_vcan(r0, AUTO, &AUTO={'vxcan0\x00', <r1=>0x0})
bind$can_j1939(r0, &AUTO={AUTO, r1, 0x0, {0x0, 0x0, 0x0, 0x0}, 0x0}, AUTO)

r2 = socket$can_j1939(AUTO, AUTO, AUTO)
ioctl$ifreq_SIOCGIFINDEX_vcan(r2, AUTO, &AUTO={'vxcan1\x00', <r3=>0x0})
bind$can_j1939(r2, &AUTO={AUTO, r3, 0x0, {0x0, 0x0, 0x0, 0x0}, 0x0}, AUTO)
connect$can_j1939(r2, &AUTO={AUTO, r3, 0x0, {0x0, 0x0, 0x0, 0x0}, 0x0}, AUTO)

# Test 1: Basic TP (Transport Protocol) - triggers TP.CM and TP.DT
sendmsg$can_j1939(r2, &AUTO={0x0, 0x0, &AUTO={&AUTO=""/40, 0x28}, 0x1, 0x0, 0x0, 0x0}, 0x0)
recvmsg$can_j1939(r0, &AUTO={0x0, 0x0, &AUTO=[{&AUTO=""/40, 0x28}], 0x1, 0x0, 0x0, 0x0}, 0x0)

# Test 2: Medium TP message (256-1785 bytes)
sendmsg$can_j1939(r2, &AUTO={0x0, 0x0, &AUTO={&AUTO=""/2048, 0x800}, 0x1, 0x0, 0x0, 0x0}, 0x0)
recvmsg$can_j1939(r0, &AUTO={0x0, 0x0, &AUTO=[{&AUTO=""/1298, 0x512}], 0x1, 0x0, 0x0, 0x0}, 0x0)

# Test 3: ETP (Extended Transport Protocol) - Messages >1785 bytes
sendmsg$can_j1939(r2, &AUTO={0x0, 0x0, &AUTO={&AUTO=""/2048, 0x800}, 0x1, 0x0, 0x0, 0x0}, 0x0)
recvmsg$can_j1939(r0, &AUTO={0x0, 0x0, &AUTO=[{&AUTO=""/2048, 0x800}], 0x1, 0x0, 0x0, 0x0}, 0x0)

# Test 4: auto
sendmsg$can_j1939(r2, &AUTO={0x0, 0x0, &AUTO={&AUTO='data', AUTO}, 0x1, 0x0, 0x0, 0x0}, 0x0)
recvmsg$can_j1939(r0, &AUTO={0x0, 0x0, &AUTO=[{&AUTO='----', AUTO}], 0x1, 0x0, 0x0, 0x0}, 0x0)

close(r0)
close(r2)